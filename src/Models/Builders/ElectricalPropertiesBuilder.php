<?php

declare(strict_types=1);

/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellEVLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellEVLib\Models\ElectricalProperties;

/**
 * Builder for model ElectricalProperties
 *
 * @see ElectricalProperties
 */
class ElectricalPropertiesBuilder
{
    /**
     * @var ElectricalProperties
     */
    private $instance;

    private function __construct(ElectricalProperties $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Electrical Properties Builder object.
     */
    public static function init(): self
    {
        return new self(new ElectricalProperties());
    }

    /**
     * Sets power Type field.
     *
     * @param string|null $value
     */
    public function powerType(?string $value): self
    {
        $this->instance->setPowerType($value);
        return $this;
    }

    /**
     * Sets voltage field.
     *
     * @param float|null $value
     */
    public function voltage(?float $value): self
    {
        $this->instance->setVoltage($value);
        return $this;
    }

    /**
     * Sets amperage field.
     *
     * @param float|null $value
     */
    public function amperage(?float $value): self
    {
        $this->instance->setAmperage($value);
        return $this;
    }

    /**
     * Sets max Electric Power field.
     *
     * @param float|null $value
     */
    public function maxElectricPower(?float $value): self
    {
        $this->instance->setMaxElectricPower($value);
        return $this;
    }

    /**
     * Initializes a new Electrical Properties object.
     */
    public function build(): ElectricalProperties
    {
        return CoreHelper::clone($this->instance);
    }
}
