<?php

declare(strict_types=1);

/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellEVLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellEVLib\Models\ConnectorVO;
use ShellEVLib\Models\ElectricalProperties;
use ShellEVLib\Models\TariffVO;

/**
 * Builder for model ConnectorVO
 *
 * @see ConnectorVO
 */
class ConnectorVOBuilder
{
    /**
     * @var ConnectorVO
     */
    private $instance;

    private function __construct(ConnectorVO $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new connector vo Builder object.
     */
    public static function init(): self
    {
        return new self(new ConnectorVO());
    }

    /**
     * Sets uid field.
     */
    public function uid(?int $value): self
    {
        $this->instance->setUid($value);
        return $this;
    }

    /**
     * Sets external id field.
     */
    public function externalId(?string $value): self
    {
        $this->instance->setExternalId($value);
        return $this;
    }

    /**
     * Sets connector type field.
     */
    public function connectorType(?string $value): self
    {
        $this->instance->setConnectorType($value);
        return $this;
    }

    /**
     * Sets electrical properties field.
     */
    public function electricalProperties(?ElectricalProperties $value): self
    {
        $this->instance->setElectricalProperties($value);
        return $this;
    }

    /**
     * Sets fixed cable field.
     */
    public function fixedCable(?bool $value): self
    {
        $this->instance->setFixedCable($value);
        return $this;
    }

    /**
     * Sets tariff field.
     */
    public function tariff(?TariffVO $value): self
    {
        $this->instance->setTariff($value);
        return $this;
    }

    /**
     * Sets updated field.
     */
    public function updated(?string $value): self
    {
        $this->instance->setUpdated($value);
        return $this;
    }

    /**
     * Sets updated by field.
     */
    public function updatedBy(?string $value): self
    {
        $this->instance->setUpdatedBy($value);
        return $this;
    }

    /**
     * Sets deleted field.
     */
    public function deleted(?string $value): self
    {
        $this->instance->setDeleted($value);
        return $this;
    }

    /**
     * Initializes a new connector vo object.
     */
    public function build(): ConnectorVO
    {
        return CoreHelper::clone($this->instance);
    }
}
