<?php

declare(strict_types=1);

/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellEVLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellEVLib\Models\Coordinates;
use ShellEVLib\Models\MultiLocationMarker;

/**
 * Builder for model MultiLocationMarker
 *
 * @see MultiLocationMarker
 */
class MultiLocationMarkerBuilder
{
    /**
     * @var MultiLocationMarker
     */
    private $instance;

    private function __construct(MultiLocationMarker $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Multi Location Marker Builder object.
     *
     * @param string $markerType
     */
    public static function init(string $markerType): self
    {
        return new self(new MultiLocationMarker($markerType));
    }

    /**
     * Sets unique Key field.
     *
     * @param string|null $value
     */
    public function uniqueKey(?string $value): self
    {
        $this->instance->setUniqueKey($value);
        return $this;
    }

    /**
     * Sets coordinates field.
     *
     * @param Coordinates|null $value
     */
    public function coordinates(?Coordinates $value): self
    {
        $this->instance->setCoordinates($value);
        return $this;
    }

    /**
     * Sets location Count field.
     *
     * @param float|null $value
     */
    public function locationCount(?float $value): self
    {
        $this->instance->setLocationCount($value);
        return $this;
    }

    /**
     * Sets evse Count field.
     *
     * @param float|null $value
     */
    public function evseCount(?float $value): self
    {
        $this->instance->setEvseCount($value);
        return $this;
    }

    /**
     * Sets max Power field.
     *
     * @param float|null $value
     */
    public function maxPower(?float $value): self
    {
        $this->instance->setMaxPower($value);
        return $this;
    }

    /**
     * Sets geo Hash field.
     *
     * @param string|null $value
     */
    public function geoHash(?string $value): self
    {
        $this->instance->setGeoHash($value);
        return $this;
    }

    /**
     * Initializes a new Multi Location Marker object.
     */
    public function build(): MultiLocationMarker
    {
        return CoreHelper::clone($this->instance);
    }
}
