<?php

declare(strict_types=1);

/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellEVLib\Models;

use stdClass;

class Tariff implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $startFee;

    /**
     * @var float|null
     */
    private $perMinute;

    /**
     * @var float|null
     */
    private $perKWh;

    /**
     * @var string|null
     */
    private $currency;

    /**
     * @var string|null
     */
    private $updated;

    /**
     * @var string|null
     */
    private $updatedBy;

    /**
     * @var string|null
     */
    private $structure;

    /**
     * Returns Start Fee.
     * Tariff to start a charging session
     */
    public function getStartFee(): ?float
    {
        return $this->startFee;
    }

    /**
     * Sets Start Fee.
     * Tariff to start a charging session
     *
     * @maps startFee
     */
    public function setStartFee(?float $startFee): void
    {
        $this->startFee = $startFee;
    }

    /**
     * Returns Per Minute.
     * Tariff per minute of charging time
     */
    public function getPerMinute(): ?float
    {
        return $this->perMinute;
    }

    /**
     * Sets Per Minute.
     * Tariff per minute of charging time
     *
     * @maps perMinute
     */
    public function setPerMinute(?float $perMinute): void
    {
        $this->perMinute = $perMinute;
    }

    /**
     * Returns Per K Wh.
     * Tariff per kWh of energy consumed
     */
    public function getPerKWh(): ?float
    {
        return $this->perKWh;
    }

    /**
     * Sets Per K Wh.
     * Tariff per kWh of energy consumed
     *
     * @maps perKWh
     */
    public function setPerKWh(?float $perKWh): void
    {
        $this->perKWh = $perKWh;
    }

    /**
     * Returns Currency.
     * ISO 4217 Currency Code of the local currency.
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     * ISO 4217 Currency Code of the local currency.
     *
     * @maps currency
     */
    public function setCurrency(?string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Updated.
     * ISO8601-compliant UTC datetime of the last update of the Tariff
     */
    public function getUpdated(): ?string
    {
        return $this->updated;
    }

    /**
     * Sets Updated.
     * ISO8601-compliant UTC datetime of the last update of the Tariff
     *
     * @maps updated
     */
    public function setUpdated(?string $updated): void
    {
        $this->updated = $updated;
    }

    /**
     * Returns Updated By.
     */
    public function getUpdatedBy(): ?string
    {
        return $this->updatedBy;
    }

    /**
     * Sets Updated By.
     *
     * @maps updatedBy
     * @factory \ShellEVLib\Models\TariffVOUpdatedByEnum::checkValue
     */
    public function setUpdatedBy(?string $updatedBy): void
    {
        $this->updatedBy = $updatedBy;
    }

    /**
     * Returns Structure.
     * Tariff structure that this tariff belongs to, typically Default unless specific tariff is defined
     * for provider
     */
    public function getStructure(): ?string
    {
        return $this->structure;
    }

    /**
     * Sets Structure.
     * Tariff structure that this tariff belongs to, typically Default unless specific tariff is defined
     * for provider
     *
     * @maps structure
     */
    public function setStructure(?string $structure): void
    {
        $this->structure = $structure;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->startFee)) {
            $json['startFee']  = $this->startFee;
        }
        if (isset($this->perMinute)) {
            $json['perMinute'] = $this->perMinute;
        }
        if (isset($this->perKWh)) {
            $json['perKWh']    = $this->perKWh;
        }
        if (isset($this->currency)) {
            $json['currency']  = $this->currency;
        }
        if (isset($this->updated)) {
            $json['updated']   = $this->updated;
        }
        if (isset($this->updatedBy)) {
            $json['updatedBy'] = TariffVOUpdatedByEnum::checkValue($this->updatedBy);
        }
        if (isset($this->structure)) {
            $json['structure'] = $this->structure;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
